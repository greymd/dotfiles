# Reduce delay of key stroke
set -sg escape-time 1

set -g prefix C-f
unbind C-b

set -g default-terminal "screen-256color"

# Reload configure file with r key
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# Send C-a to a program inside tmux by typing C-a*2
bind C-a send-prefix

# e and E keys for enable/disable synchronize panes.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# Make new windows/panes have the directory same as original one.
## For new windows
unbind c
bind c new-window -c "#{pane_current_path}"
## For new panes
## 1.9 changed the behaviour of split-window and new-window (I prefer the old style for split-window).
unbind %
bind-key % split-window -h -c "#{pane_current_path}"
unbind '"'
bind-key '"' split-window -v -c "#{pane_current_path}"

# Pane move with key bindings like vim
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind -Tcopy-mode-vi v send -X begin-selection
bind -Tcopy-mode-vi y send -X copy-selection-and-cancel
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Resize panes with key bindings like vim
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Enable mouse operation
set-option -g mouse on
unbind-key -T copy-mode-vi MouseDragEnd1Pane
# since MouseDragEnd1Pane neither exit copy-mode nor clear selection now,
# let single click do selection clearing for us.
bind-key -T copy-mode-vi MouseDown1Pane select-pane\; send-keys -X clear-selection

# this line changes the default binding of MouseDrag1Pane, the only difference
# is that we use `copy-mode -eM` instead of `copy-mode -M`, so that WheelDownPane
# can trigger copy-mode to exit when copy-mode is entered by MouseDrag1Pane
bind -n MouseDrag1Pane if -Ft= '#{mouse_any_flag}' 'if -Ft= \"#{pane_in_mode}\" \"copy-mode -eM\" \"send-keys -M\"' 'copy-mode -eM'

# Status bar settings
## Set left panel
set -g status-left-length 40
set -g status-right "#{?client_prefix,#[reverse],}#[fg=black]S:#S #[fg=black]W:#I #[fg=black]P:#P #[default]"
set -g status-left ""
## Refresh interval (default value is 15)
set -g status-interval 60
## Centerize the location of window list.
set -g status-justify left
## Enable visual notification.
setw -g monitor-activity on
set -g visual-activity on
## Locate status bar upper.
set -g status-position top

## ## border colors
## set -g pane-border-fg magenta
## set -g pane-active-border-fg green
## set -g pane-active-border-bg default

## From 2.9
# set -g pane-border-style fg=black
# set -g pane-active-border-style fg=green,bg=default

# Show status line under the each pane.
# set-option -g pane-border-status bottom
# set-option -g pane-border-format "#[bg=green,fg=black]#P #{pane_title}#[default]"
# set-option -g pane-border-format "#P #(tmux-pane-border #{pane_current_command} #{pane_pid})"
# set-option -g pane-border-format "#P #{pane_pid}"


# Default command is empty string
set-option -g default-command "zsh"

# Enable copy mode
## Apply vi key bind for copying
set-window-option -g mode-keys vi

## copy to clipboard
###
### Cygwin ONLY
###
if-shell "uname | grep -q CYGWIN" '\
  set-option -g default-command "which zsh 2>&1 > /dev/null && zsh"; \
  unbind -t vi-copy v; \
  bind-key -t vi-copy v begin-selection; \
  unbind -t vi-copy y; \
  bind-key -t vi-copy y copy-pipe "cat > /dev/clipboard"; \
  unbind -t vi-copy Enter; \
  bind-key -t vi-copy enter copy-pipe "cat > /dev/clipboard"; \
'

###
### Linux ONLY
###
if-shell "uname | grep -q Linux && which xsel && tmux -V | grep -Evq '(2.4|2.5|2.6|2.7|2.8)'" '\
  set-option -g default-command "which zsh 2>&1 > /dev/null && zsh"; \
  unbind -t vi-copy v; \
  bind-key -t vi-copy v begin-selection; \
  unbind -t vi-copy y; \
  bind-key -t vi-copy y copy-pipe "xsel -ib"; \
  unbind -t vi-copy Enter; \
  bind-key -t vi-copy Enter copy-pipe "xsel -ib"; \
'

###
### Linux ONLY (tmux 2.4 or upper)
###
if-shell "uname | grep -q Linux && which xsel && tmux -V | grep -Eq '(2.4|2.5|2.6|2.7|2.8)'" '\
  set-option -g default-command "which zsh 2>&1 > /dev/null && zsh"; \
  unbind -Tcopy-mode-vi v; \
  bind-key -Tcopy-mode-vi v send-keys -X begin-selection; \
  unbind -Tcopy-mode-vi y; \
  bind-key -Tcopy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -ib"; \
  unbind -Tcopy-mode-vi Enter; \
  bind-key -Tcopy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -ib"; \
'

###
### For Docker ( Allow OSC52 when xsed does not exist.)
###
if-shell "uname | grep -q Linux && ! which xsel" '\
  set -g prefix C-f; \
  unbind C-a; \
  set-option -g default-command "which zsh 2>&1 > /dev/null && zsh"; \
  set-option -ag terminal-overrides ",mlterm:Ms=\\E]52;%p1%s;%p2%s\\7"; \
  set-option -g set-clipboard on; \
'

###
### Bash on Windows
### win32yank.exe is required (https://github.com/equalsraf/win32yank).
###
if-shell "grep -q Microsoft /proc/version 2> /dev/null && which win32yank.exe" '\
  set-option -g default-command "which zsh 2>&1 > /dev/null && zsh"; \
  unbind -Tcopy-mode-vi v; \
  bind-key -Tcopy-mode-vi v send-keys -X begin-selection; \
  unbind -Tcopy-mode-vi y; \
  bind-key -Tcopy-mode-vi y send-keys -X copy-pipe-and-cancel "win32yank.exe -i"; \
  unbind -Tcopy-mode-vi Enter; \
  bind-key -Tcopy-mode-vi Enter send-keys -X copy-pipe-and-cancel "win32yank.exe -i"; \
  bind ] run "win32yank.exe -o | tr -d '\r' | tmux load-buffer - && tmux paste-buffer"; \
  bind-key -Troot MouseDown2Pane run "win32yank.exe -o | tr -d '\r' | tmux load-buffer - && tmux paste-buffer"; \
'

###
### macOS
###
if-shell "uname | grep -q Darwin && type pbcopy && tmux -V | grep -vqE '(2.4|2.5|2.6|2.7|2.8|2.9|2.9a|3.0a|3.1|3.1b|3.1c|3.2|3.3a|3.4)'" '\
  set-option -g default-command "reattach-to-user-namespace -l zsh"; \
  unbind -t vi-copy v; \
  bind-key -t vi-copy v begin-selection; \
  unbind -t vi-copy y; \
  bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"; \
  unbind -t vi-copy Enter; \
  bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"; \
'

##
### macOS (tmux 2.4 or upper)
###
### iTerm2 で利用する場合、"Applications in terminal may access clipboard" の設定を有効にすること
### disabled: set-option -g default-command "reattach-to-user-namespace -l zsh";
### Because Command + v does not work with tmux 2.5
if-shell "uname | grep -q Darwin && type pbcopy && tmux -V | grep -qE '(2.4|2.5|2.6|2.7|2.8|2.9|2.9a|3.0a|3.1|3.1b|3.1c|3.2|3.3a|3.4)'" '\
  unbind -Tcopy-mode-vi v; \
  bind-key -Tcopy-mode-vi v send-keys -X begin-selection; \
  unbind -Tcopy-mode-vi y; \
  bind-key -Tcopy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"; \
  unbind -Tcopy-mode-vi Enter; \
  bind-key -Tcopy-mode-vi Enter send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"; \
'

#### COLOUR (Solarized dark)
##
## # default statusbar colors
## set-option -g status-fg yellow #yellow
## set-option -g status-bg black #base02
## set-option -g status-attr default
##
## # default window title colors
## set-window-option -g window-status-fg brightblue #base0
## set-window-option -g window-status-bg default
## #set-window-option -g window-status-attr dim
##
## # active window title colors
## set-window-option -g window-status-current-fg brightred #orange
## set-window-option -g window-status-current-bg default
## #set-window-option -g window-status-current-attr bright
##
## # pane border
## set-option -g pane-border-fg black #base02
## set-option -g pane-active-border-fg brightgreen #base01
##
## # message text
## set-option -g message-bg black #base02
## set-option -g message-fg brightred #orange
##
## # pane number display
## set-option -g display-panes-active-colour blue #blue
## set-option -g display-panes-colour brightred #orange
##
## # clock
## set-window-option -g clock-mode-colour green #green
##

set -g @adtty 'A'
set -g @plugin 'greymd/tmux-adtty'
set -g @plugin 'tmux-plugins/tmux-yank'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
